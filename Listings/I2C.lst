C51 COMPILER V9.60.0.0   I2C                                                               09/25/2023 19:22:07 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\I2C.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\I2C.c LARGE OPTIMIZE(0,SIZE) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\I2C.lst) TABS(2) OBJECT(.\Objects\I2C.obj)

line level    source

   1          #include "main.h"
   2          
   3          void I2C_Init()
   4          {
   5   1        P3M0 |= 0x0c;
   6   1        P3M1 |= 0x0c; 
   7   1      }
   8          
   9          //uint16_t AXP173_Read_ADC(uint8_t addr)
  10          //{
  11          //  
  12          //}
  13          
  14          float AXP173_Read_VBUS_Voltage()
  15          {
  16   1        float ADCLSB = 1.7 / 1000.0;
  17   1        return (float)I2C_Read_2Byte(0x5A) * ADCLSB;
  18   1      }
  19          
  20          float AXP173_Read_APS_Voltage()
  21          {
  22   1        float ADCLSB = 1.4 / 1000.0;
  23   1        return (float)I2C_Read_2Byte(0x7E) * ADCLSB;
  24   1      }
  25          
  26          float AXP173_Read_BAT_Voltage()
  27          {
  28   1        float ADCLSB = 1.1 / 1000.0;
  29   1        return (float)I2C_Read_2Byte(0x78) * ADCLSB;
  30   1      }
  31          
  32          float AXP173_Read_InternalTemp()
  33          {
  34   1        float ADCLSB = 0.1;
  35   1        const float OFFSET_DEG_C = -144.7;
  36   1        float ReData = (float)I2C_Read_2Byte(0x5E);
  37   1        return OFFSET_DEG_C + ReData * ADCLSB;
  38   1      }
  39          
  40          void AXP173_Set_Voltage_DCDC2(uint16_t voltage)
  41          {
  42   1        uint8_t dat = 0;
  43   1        if(voltage < 2275 && voltage > 700)
  44   1        {
  45   2          dat = (voltage-700)/25;
  46   2          //printf("DCDC2 %dmV 0x23=%d", voltage, dat);
  47   2          I2C_WriteByte(0x23, dat); //DC-DC2
  48   2        }
  49   1      }
  50          
  51          void AXP173_Set_Voltage_LDO4(uint16_t voltage)
  52          {
  53   1        uint8_t dat = 0;
  54   1        if(voltage < 3500 && voltage > 700)
C51 COMPILER V9.60.0.0   I2C                                                               09/25/2023 19:22:07 PAGE 2   

  55   1        {
  56   2          dat = (voltage-700)/25;
  57   2          //printf("DCDC2 %dmV 0x23=%d", voltage, dat);
  58   2          I2C_WriteByte(0x27, dat); //DC-DC2
  59   2        }
  60   1      }
  61          
  62          uint16_t I2C_Read_2Byte(uint8_t addr)
  63          {
  64   1        uint16_t dat = 0;
  65   1        uint8_t dat1, dat2;
  66   1        I2C_Start();
  67   1        I2C_SendData(AXP173_ADDR);
  68   1        I2C_RecvACK();
  69   1        I2C_SendData(addr);
  70   1        I2C_RecvACK();  
  71   1        I2C_Start();
  72   1        I2C_SendData(AXP173_ADDR + 1);
  73   1        I2C_RecvACK();
  74   1        dat1 = I2C_RecvData();
  75   1        I2C_SendACK();
  76   1        dat2 = I2C_RecvData();
  77   1        I2C_SendNAK();
  78   1        I2C_Stop();
  79   1        //UartSend(dat1);
  80   1        //UartSend(dat2);
  81   1        dat = (dat1<< 4) + dat2;
  82   1        Delay30us();
  83   1        return dat;
  84   1      }
  85          
  86          uint8_t I2C_ReadByte(uint8_t addr)
  87          {
  88   1        uint8_t dat = 0;
  89   1        I2C_Start();
  90   1        I2C_SendData(AXP173_ADDR);
  91   1        I2C_RecvACK();
  92   1        I2C_SendData(addr);
  93   1        I2C_RecvACK();
  94   1        
  95   1        Delay30us();
  96   1        
  97   1        I2C_Start();
  98   1        I2C_SendData(AXP173_ADDR + 1);
  99   1        I2C_RecvACK();
 100   1        dat = I2C_RecvData();
 101   1        I2C_SendNAK();
 102   1        I2C_Stop();
 103   1        return dat;
 104   1      }
 105          
 106          void I2C_WriteByte(uint8_t addr, uint8_t dat)
 107          {
 108   1        I2C_Start();
 109   1        I2C_SendData(AXP173_ADDR);
 110   1        I2C_RecvACK();
 111   1        I2C_SendData(addr);
 112   1        I2C_RecvACK();
 113   1        I2C_SendData(dat);
 114   1        I2C_RecvACK();
 115   1        I2C_Stop();
 116   1      }
C51 COMPILER V9.60.0.0   I2C                                                               09/25/2023 19:22:07 PAGE 3   

 117          
 118          void I2C_Start()
 119          {
 120   1          SDA = 1;
 121   1          SCL = 1;
 122   1          Delay12us();
 123   1          SDA = 0;
 124   1          Delay12us();
 125   1          SCL = 0;
 126   1      }
 127          
 128          void I2C_SendData(uint8_t dat)
 129          {
 130   1          unsigned int i;
 131   1          for(i=0; i<8; i++)
 132   1          {
 133   2              SCL = 0;
 134   2              Delay12us();
 135   2              if(dat & 0x80) 
 136   2                  SDA = 1;
 137   2              else 
 138   2                  SDA = 0;
 139   2              dat <<= 1;
 140   2              SCL = 1;
 141   2              Delay12us();
 142   2          }
 143   1          SCL = 0;
 144   1      }
 145          
 146          void I2C_SendACK()
 147          {
 148   1          SCL = 0;
 149   1          Delay12us();
 150   1          SDA = 0;
 151   1          SCL = 1;
 152   1          Delay12us();
 153   1          SCL = 0;
 154   1          SDA = 1;
 155   1          Delay12us();
 156   1      }
 157          
 158          void I2C_RecvACK()
 159          {
 160   1          SCL = 0;
 161   1          Delay12us();
 162   1          SDA = 1;
 163   1          SCL = 1;
 164   1          Delay12us();
 165   1          SCL = 0;
 166   1          Delay12us();
 167   1      }
 168          
 169          uint8_t I2C_RecvData()
 170          {
 171   1          uint8_t dat, i;
 172   1          for(i=0; i<8; i++)
 173   1          {
 174   2              dat <<= 1;
 175   2              SCL = 0;
 176   2              Delay12us();
 177   2              SCL = 1;
 178   2              Delay12us();
C51 COMPILER V9.60.0.0   I2C                                                               09/25/2023 19:22:07 PAGE 4   

 179   2              if(SDA) dat += 1;
 180   2          }
 181   1          return dat;
 182   1      }
 183          
 184          void I2C_SendNAK()
 185          {
 186   1          SCL = 0;
 187   1          Delay12us();
 188   1          SDA = 1;
 189   1          SCL = 1;
 190   1          Delay12us();
 191   1          SCL = 0;
 192   1          Delay12us();
 193   1      } 
 194          
 195          void I2C_Stop()
 196          {
 197   1          SDA = 0;
 198   1          SCL = 1;
 199   1          Delay12us();
 200   1          SDA = 1;
 201   1          Delay12us();
 202   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    812    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     44    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
