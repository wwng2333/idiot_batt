C51 COMPILER V9.60.0.0   I2C                                                               09/25/2023 12:55:47 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\I2C.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\I2C.c OPTIMIZE(0,SIZE) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\I2
                    -C.lst) TABS(2) OBJECT(.\Objects\I2C.obj)

line level    source

   1          #include "main.h"
   2          
   3          void I2C_Init()
   4          {
   5   1        P3M0 |= 0x0c;
   6   1        P3M1 |= 0x0c; 
   7   1      }
   8          
   9          void AXP173_Set_Voltage_DCDC2(uint16_t voltage)
  10          {
  11   1        uint8_t dat = 0;
  12   1        if(voltage < 2275 && voltage > 700)
  13   1        {
  14   2          dat = (voltage-700)/25;
  15   2          //printf("DCDC2 %dmV 0x23=%d", voltage, dat);
  16   2          I2C_WriteByte(0x23, dat); //DC-DC2
  17   2        }
  18   1      }
  19          
  20          uint8_t I2C_ReadByte(uint8_t addr)
  21          {
  22   1        uint8_t dat = 0;
  23   1        I2C_Start();
  24   1        I2C_SendData(AXP173_ADDR);
  25   1        I2C_RecvACK();
  26   1        I2C_SendData(addr);
  27   1        I2C_RecvACK();
  28   1        
  29   1        Delay30us();
  30   1        
  31   1        I2C_Start();
  32   1        I2C_SendData(AXP173_ADDR + 1);
  33   1        I2C_RecvACK();
  34   1        dat = I2C_RecvData();
  35   1        I2C_SendNAK();
  36   1        I2C_Stop();
  37   1        return dat;
  38   1      }
  39          
  40          void I2C_WriteByte(uint8_t addr, uint8_t dat)
  41          {
  42   1        I2C_Start();
  43   1        I2C_SendData(AXP173_ADDR);
  44   1        I2C_RecvACK();
  45   1        I2C_SendData(addr);
  46   1        I2C_RecvACK();
  47   1        I2C_SendData(dat);
  48   1        I2C_RecvACK();
  49   1        I2C_Stop();
  50   1      }
  51          
  52          void I2C_Start()
  53          {
  54   1          SDA = 1;
C51 COMPILER V9.60.0.0   I2C                                                               09/25/2023 12:55:47 PAGE 2   

  55   1          SCL = 1;
  56   1          Delay12us();
  57   1          SDA = 0;
  58   1          Delay12us();
  59   1          SCL = 0;
  60   1      }
  61          
  62          void I2C_SendData(uint8_t dat)
  63          {
  64   1          unsigned int i;
  65   1          for(i=0; i<8; i++)
  66   1          {
  67   2              SCL = 0;
  68   2              Delay12us();
  69   2              if(dat & 0x80) 
  70   2                  SDA = 1;
  71   2              else 
  72   2                  SDA = 0;
  73   2              dat <<= 1;
  74   2              SCL = 1;
  75   2              Delay12us();
  76   2          }
  77   1          SCL = 0;
  78   1      }
  79          
  80          void I2C_RecvACK()
  81          {
  82   1          SCL = 0;
  83   1          Delay12us();
  84   1          SDA = 0;
  85   1          SCL = 1;
  86   1          Delay12us();
  87   1          SCL = 0;
  88   1          SDA = 1;
  89   1          Delay12us();
  90   1      }
  91          
  92          uint8_t I2C_RecvData()
  93          {
  94   1          uint8_t dat, i;
  95   1          for(i=0; i<8; i++)
  96   1          {
  97   2              dat <<= 1;
  98   2              SCL = 0;
  99   2              Delay12us();
 100   2              SCL = 1;
 101   2              Delay12us();
 102   2              if(SDA) dat += 1;
 103   2          }
 104   1          return dat;
 105   1      }
 106          
 107          void I2C_SendNAK()
 108          {
 109   1          SCL = 0;
 110   1          Delay12us();
 111   1          SDA = 1;
 112   1          SCL = 1;
 113   1          Delay12us();
 114   1          SCL = 0;
 115   1          Delay12us();
 116   1      }
C51 COMPILER V9.60.0.0   I2C                                                               09/25/2023 12:55:47 PAGE 3   

 117          
 118          void I2C_Stop()
 119          {
 120   1          SDA = 0;
 121   1          SCL = 1;
 122   1          Delay12us();
 123   1          SDA = 1;
 124   1          Delay12us();
 125   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    321    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
